/*
 * Base
 * Helpers
 */

// Sets variables
$images-path: "/assets/images";

$breakpoints: (
  x-small: 576px,
  small: 768px,
  medium: 992px,
  large: 1200px
);

// Sets background properties
@mixin background($name: null, $color: null, $pos: "center center", $repeat: "no-repeat", $size: null) {
  background: url(#{$images-path}/#{$name}) #{$color} #{$pos} #{$repeat};
  background-size: $size;
}

// Sets all necessary font properties
@mixin font($size, $line-height, $letter-spacing: null, $weight: null, $family: null, $color: null) {
  font-family: $family;
  font-size: $size + px;
  line-height: $line-height + px;

  @if $letter-spacing {
    letter-spacing: $letter-spacing + px;
  }

  font-weight: $weight;
  color: $color;
}

// Sets width and height, with 'px' as the default unir
@mixin wh($width, $height: null, $m-width: null) {
  width: $width;
  height: $height;
  max-width: $m-width;
}

// Sets display to flex, and assigns other properties
@mixin flex($justify: null, $align: null, $direction: null) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Sets display to grid
@mixin grid($cols: null, $rows: null, $gap: 30px, $align: null) {
  display: grid;
  grid-gap: $gap;
  grid-template-columns: $cols;
  grid-template-rows: $rows;
  align-items: $align;
}



// Set absolute position and passed coordinates
@mixin pos($top: null, $right: null, $bottom: null, $left: null, $z: null, $pos: absolute) {
  position: $pos;

  @if $top {
    top: $top;
  }
  @if $right {
    right: $right;
  }
  @if $bottom {
    bottom: $bottom;
  }
  @if $left {
    left: $left;
  }
  @if $z {
    z-index: $z;
  }
}

// Sets a min-width media query
@mixin mq-min($breakpoint) {
  @media (min-width: $breakpoint + px) {
    @content;
  }
}

@mixin mq-after($breakpoint) {
  $breakpoint-value: map-get($breakpoints, $breakpoint);

  @if $breakpoint-value {
    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

@mixin mq-before($breakpoint) {
  $breakpoint-value: map-get($breakpoints, $breakpoint);

  @if $breakpoint-value {
    @media (max-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @media (max-width: $breakpoint) {
      @content;
    }
  }
}

@mixin mq-hover {
  @media (hover: hover) {
    @content;
  }
}